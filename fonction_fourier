void fourier(image_c imagecomplexe  imc,  int isign)
{
unsigned long nn[2]={imc->height,imc->width};
fourn( (float*)imc->rawdata, nn,  2, isign);

//on normalise les valeurs entre 0 et 255
float max=imc->rawdata[cherchermax(*imc->rawdata)];
float min=imc->rawdata[cherchermin(*imc->rawdata)];
float a=255/(max-min);
float b=-a*min;
for (int i=0;i<imc->height*imc->width;i++)
{
    imc->rawdata[i]=a*imc->rawdata[i]+b;
}


int cherchermin(float *data)
{
    int position;
    int n=sizeof(data)/sizeof(data[0]);
    float min=data[0];
    for (int i = 0;i<n;i++)
    {
            if(data[i]<min){
                min=data[i];
                position = i;
            }
            else;
        }
        return position;
}
